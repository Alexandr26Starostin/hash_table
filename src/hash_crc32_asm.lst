     1                                  ;---------------------------------------------------------------------------------------
     2                                  ;program on Linux-nasm-64
     3                                  ;has code with hash_crc32_asm                  
     4                                  ;---------------------------------------------------------------------------------------
     5                                  section .text   ;has text with program
     6                                  global hash_crc32_asm  ;global func: other files can see this func (for ld) 
     7                                  
     8                                  ;---------------------------------------------------------------------------------------------------------
     9                                  ;                                       hash_crc32_asm 
    10                                  ;calculate hash crc32 for 'char[32] str' and return it
    11                                  ;
    12                                  ;entry: rdi = ptr on str with len 32 bytes
    13                                  ;
    14                                  ;exit:  rax = remainder (hash) crc32
    15                                  ;
    16                                  ;destr: rax = result
    17                                  ;		rsi = mask_for: rax % 1024
    18                                  ;	
    19                                  ;must save:    rbp, rbx, r12-15
    20                                  ;mustn't save: others registers
    21                                  ;---------------------------------------------------------------------------------------------------------
    22                                  hash_crc32_asm:
    23                                  
    24 00000000 31C0                    	xor eax, eax    ;rax = 0 - result
    25                                  
    26 00000002 F2480F38F107            	crc32 rax, qword [rdi]        ;rdx = hash for 1 part element 
    27 00000008 F2480F38F14708          	crc32 rax, qword [rdi + 8]    ;rdx = hash for 2 part element 
    28 0000000F F2480F38F14710          	crc32 rax, qword [rdi + 16]   ;rdx = hash for 3 part element 
    29 00000016 F2480F38F14718          	crc32 rax, qword [rdi + 24]   ;rdx = hash for 4 part element 
    30                                  
    31 0000001D BEFF030000              	mov rsi, 01111111111b   ;rsi = 1024 - 1 = mask 
    32 00000022 4821F0                  	and rax, rsi           ;rax = rax_old % 1024WWWWWW
    33                                  
    34 00000025 C3                      	ret  ;rax = hash from crc32
    35                                  ;----------------------------------------------------------------------------------------------------------
